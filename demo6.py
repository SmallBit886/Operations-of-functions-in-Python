#
def fun(a,b,c): #a,b,c在函数的定义处，所以是形参
    print('a=',a)
    print('b=',b)
    print('c=',c)
#函数的调用
fun(10,20,30)   #函数调用时的参数传递，称为位置传参
'''
a= 10
b= 20
c= 30
'''
lst=[10,20,30]
fun(*lst)   #在函数调用时，将列表中的每个元素转换成位置实参传入
'''
a= 10
b= 20
c= 30
'''
print('--------------------------------------')
fun(a=10,b=20,c=30)
'''
a= 10
b= 20
c= 30
'''
dit={'a':10,'b':20,'c':30}
fun(**dit)  #在函数调用时，将字典中的每个键值对都转换成关键字实参传入
'''
a= 10
b= 20
c= 30
'''
def fun1(a,b=10):   #b在函数定义处，所以b是形参，而且进行了赋值，所以b称为默认值形参
    print('a=',a)
    print('b=',b)
fun1(10)
'''
a= 10
b= 10
'''
fun1(10,20)
'''
a= 10
b= 20
'''
def fun2(*args):    #个数可变的位置形参
     print(args)
def fun3(**args2):  #个数可变的关键字形参
    print(args2)

fun2(10,20,30,40)   #(10, 20, 30, 40)
fun3(a=11,b=22,c=33,d=44)   #{'a': 11, 'b': 22, 'c': 33, 'd': 44}

def fun4(a,b,*,c,d):    #从*之后的参数，在函数调用的时候，只能采用关键字参数传递
    print('a=',a)
    print('b=',b)
    print('c=',c)
    print('d=',d)
#调用fun4函数
#fun4(10,20,30,40)   #位置实参传递
fun4(a=10,b=20,c=30,d=40)   #关键字实参传递
fun4(10,20,c=30,d=40)   #前两个参数采用的是位置实参传参，而c和d两个参数采用的是关键字实参传参
'''要求， c,d 只能才能关键字实参传递'''

'''函数定义时的形参的顺序问题'''
def fun5(a,b,*,c,d,**args):
    pass
def fun6(*a,**b):
    pass
def fun7(a,b=10,*c,**d):
    pass
